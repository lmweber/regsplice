% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_data.R
\name{prepare_data}
\alias{prepare_data}
\title{Prepare data.}
\usage{
prepare_data(counts, gene)
}
\arguments{
\item{counts}{RNA-seq read counts or exon microarray intensities (matrix or data
frame). Each row is an exon, and each column is a biological sample.}

\item{gene}{Vector of gene IDs (character vector). Length is equal to the number of 
rows in \code{counts}; i.e. one entry for each exon, with repeated entries for
multiple exons within the same gene. The repeated entries are used to determine gene
length.}
}
\value{
Returns a list of data frames, where each data frame in the list contains the 
  RNA-seq read counts or exon microarray intensities for one gene. Gene names are
  stored as names of the list items. Exons with zero counts and single-exon genes have
  been removed.
}
\description{
Prepare data into format required by \code{regsplice} functions.
}
\details{
Prepares data into the format required by other functions in the \code{regsplice}
pipeline.

Inputs are a matrix or data frame of RNA-seq read counts or exon microarray
intensities (\code{counts}) and a vector of gene IDs (\code{gene}). The vector
\code{gene} must have length equal to the number of rows in \code{counts}; i.e. one
entry for each exon, with repeated entries for multiple exons within the same gene.
The repeated entries are used to determine gene length.

Data preparation consists of the following steps:
\itemize{
\item Remove exons (rows) with zero counts in all biological samples (columns).
\item Split count or intensity table into a list of sub-tables (data frames), one for
each gene.
\item Remove genes containing only a single exon (since differential splicing requires
multiple exons). For this to work correctly, this step must occur after zero-count 
exons have already been removed.}

The function \code{\link{filter_exons}} can then be used to filter low-count exons.
}
\examples{
# ---------
# Example 1
# ---------

counts <- matrix(sample(100:200, 14 * 4, replace = TRUE), nrow = 14, ncol = 4)
counts[c(2, 3, 7), ] <- 0
gene <- paste0("gene", rep(1:5, times = c(3, 2, 3, 1, 5)))

# show raw data
data.frame(gene = gene, counts)

Y <- prepare_data(counts, gene)

# show prepared data and number of genes
Y
length(Y)


# --------------------
# Example 2 (Vignette)
# --------------------

file_counts <- system.file("extdata/vignette_counts.txt", package = "regsplice")
data <- read.table(file_counts, header = TRUE, sep = "\\t", stringsAsFactors = FALSE)
counts <- data[, 2:7]
gene <- sapply(strsplit(data$exon, ":"), function(s) s[[1]])
condition <- rep(c("untreated", "treated"), each = 3)

Y <- prepare_data(counts, gene)

}
\seealso{
\code{\link{filter_exons}} \code{\link{voom_weights}}
}

