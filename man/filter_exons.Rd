% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_exons.R
\name{filter_exons}
\alias{filter_exons}
\title{Filter low-count exons.}
\usage{
filter_exons(Y, n1 = 6, n2 = 3)
}
\arguments{
\item{Y}{RNA-seq read counts or exon microarray intensities for multiple genes (list
of data frames or matrices). Names contain gene names. Created using
\code{\link{prepare_data}}.}

\item{n1}{Filtering parameter: minimum number of reads per exon, summed across all 
biological samples. Default is 6.}

\item{n2}{Filtering parameter: minimum number of reads for a single biological sample
per exon, i.e. at least one sample must have this number of reads. Default is 3.}
}
\value{
Returns a list of data frames, where each data frame in the list contains the 
  RNA-seq read counts or exon microarray intensities for one gene. Gene names are
  stored as names of the list items. Low-count exons and any remaining single-exon
  genes have been removed.
}
\description{
Filter low-count exons from RNA-seq read count data.
}
\details{
Filters low-count exons from an RNA-seq read count data set prepared with 
\code{\link{prepare_data}}, i.e. in the format required by other functions in the
\code{regsplice} pipeline.

The arguments \code{n1} and \code{n2} control the amount of filtering. Exons that meet
the filtering conditions specified by \code{n1} and \code{n2} are kept. Default values
are provided; however these may not be optimal for some experimental designs.

Any single-exon genes that remain after exons have been removed during the filtering 
step are also removed (since differential splicing requires multiple exons). The
output is in the same format as from \code{\link{prepare_data}}.

Note that when using exon microarray data, the filtering parameters \code{n1} and 
\code{n2} need to be adjusted carefully; alternatively, the filtering step may also be
skipped.
}
\examples{
file_counts <- system.file("extdata/vignette_counts.txt", package = "regsplice")
data <- read.table(file_counts, header = TRUE, sep = "\\t", stringsAsFactors = FALSE)
counts <- data[, 2:7]
gene <- sapply(strsplit(data$exon, ":"), function(s) s[[1]])
condition <- rep(c("untreated", "treated"), each = 3)

Y <- prepare_data(counts, gene)
Y <- filter_exons(Y)

}
\seealso{
\code{\link{prepare_data}} \code{\link{voom_weights}}
}

