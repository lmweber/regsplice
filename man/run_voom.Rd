% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_voom.R
\name{run_voom}
\alias{run_voom}
\title{Calculate 'voom' transformation and weights.}
\usage{
run_voom(Y, condition, norm_factors = NULL)
}
\arguments{
\item{Y}{RNA-seq read counts for multiple genes (list of data frames or matrices;
names contain gene names), after preparation and filtering with
\code{\link{prepare_data}} and \code{\link{filter_exons}}. Note that \code{voom}
assumes filtered data (see above).}

\item{condition}{Experimental conditions for each sample (character or numeric vector,
or factor).}

\item{norm_factors}{Normalization factors from \code{\link{run_normalization}} 
(numeric vector), which are used to calculate normalized library sizes. If not
provided, non-normalized library sizes are used instead. Default is NULL.}
}
\value{
Returns a list containing:
\itemize{
\item Y: Transformed count data (log2-counts per million, logCPM). List of data
frames, where each data frame contains the data for one gene. Gene names are stored as
names of the list items.
\item weights: Exon-level weights. List of data frames, where each data frame contains
the weights for one gene.
}
}
\description{
Use \code{limma-voom} to transform counts and calculate exon-level weights.
}
\details{
Raw integer counts do not fulfill the statistical assumptions required for linear 
modeling. The \code{limma-voom} methodology transforms counts to log2-counts per 
million (logCPM), and calculates exon-level weights based on the observed 
mean-variance relationship. Linear modeling methods can then be used with the 
transformed data.

For more details, see the documentation for \code{\link[limma]{voom}} in the 
\code{limma} package.

Note that \code{voom} assumes that exons (rows) with zero or low counts have already 
been removed, so this step should be done after filtering with
\code{\link{filter_exons}}.

Normalization factors from \code{\link{run_normalization}} can be provided with the 
\code{norm_factors} argument. These are used by \code{voom} to calculate normalized
library sizes. If the are not provided, \code{voom} will use non-normalized library
sizes (columnwise total counts) instead.

If you are using exon microarray data, this step should be skipped, since exon
microarray intensities are already on a continuous scale.
}
\examples{
file_counts <- system.file("extdata/vignette_counts.txt", package = "regsplice")
data <- read.table(file_counts, header = TRUE, sep = "\\t", stringsAsFactors = FALSE)
counts <- data[, 2:7]
gene <- sapply(strsplit(data$exon, ":"), function(s) s[[1]])
condition <- rep(c("untreated", "treated"), each = 3)

Y <- prepare_data(counts, gene)
Y <- filter_exons(Y)
norm_factors <- run_normalization(Y)

out_voom <- run_voom(Y, condition, norm_factors = norm_factors)
Y <- out_voom$Y
weights <- out_voom$weights

}
\seealso{
\code{\link{prepare_data}} \code{\link{filter_exons}}
  \code{\link{run_normalization}}
}

